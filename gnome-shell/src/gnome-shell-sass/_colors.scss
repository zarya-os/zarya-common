// When color definition differs for dark and light variant,
// it gets @if-ed depending on $variant
@import 'palette';

$is_highcontrast: "false";

$_dark_base_color: desaturate($dark_4, 100%);

$base_color: if($variant=='light', $light_1, $_dark_base_color);
$bg_color_dark: lighten($jet, 2%);
$bg_color: if($variant=='light', #FAFAFA, lighten($base_color, 5%));
$fg_color_dark: $porcelain;
$fg_color: if($variant=='light', $inkstone, white);

$selected_fg_color: $light_1;
$selected_bg_color: $blue_3;
$selected_borders_color: if($variant=='light', darken($selected_bg_color, 15%), darken($selected_bg_color, 20%));

$borders_color_dark: lighten(desaturate(lighten($jet, 4%), 100%), 14%); // Yaru: used for dash and other dark elements on light theme
$borders_color: if($variant=='light', darken($bg_color, 20%), transparentize($fg_color, .9));
$alt_borders_color: if($variant=='light', darken($bg_color, 24%), darken($bg_color, 10%));
$borders_edge: if($variant == 'light', rgba(255,255,255,0.8), lighten($bg_color, 5%));
$outer_borders_color: if($variant == 'light', transparentize($fg_color, 0.85), lighten($bg_color, 4%));;

$link_color: if($variant=='light', darken($selected_bg_color, 10%), lighten($selected_bg_color, 20%));
$link_visited_color: if($variant=='light', darken($selected_bg_color, 20%), lighten($selected_bg_color, 10%));
$top_hilight: $outer_borders_color;

$warning_color: if($variant == 'light', $yellow_5, #cd9309);
$error_color: if($variant == 'light', $red_3, $red_4);
$success_color: if($variant == 'light', $green_4, $green_5);
$destructive_color: $error_color;

$osd_fg_color: $light_1;
$osd_bg_color: transparentize(lighten($jet, 2%), 0.025);
$osd_insensitive_bg_color: transparentize(mix($osd_fg_color, opacify($osd_bg_color, 1), 10%), 0.5);
$osd_insensitive_fg_color: mix($osd_fg_color, opacify($osd_bg_color, 1), 50%);
$osd_borders_color: transparentize(black, 0.3);
$osd_outer_borders_color: transparentize(white, 0.84);

$shadow_color: transparentize(black, 0.9);

// button
$button_mix_factor: 9%;

// notifications
$bubble_buttons_color: if($variant =='light', darken($bg_color, 7%), lighten($bg_color,5%));

// overview background color
$system_bg_color: $_dark_base_color;

//insensitive state derived colors
$insensitive_fg_color: mix($fg_color, $bg_color, 50%);
$insensitive_bg_color: mix($bg_color, $base_color, 60%);
$insensitive_borders_color: $borders_color;

//colors for the backdrop state, derived from the main colors.
$backdrop_base_color: if($variant=='light', darken($base_color, 1%), lighten($base_color, 1%));
$backdrop_bg_color: $bg_color;
$backdrop_fg_color: mix($fg_color, $backdrop_bg_color, 80%);
$backdrop_insensitive_color: if($variant=='light', darken($backdrop_bg_color, 15%), lighten($backdrop_bg_color, 15%));
$backdrop_borders_color: mix($borders_color, $bg_color, 90%);
$backdrop_dark_fill: mix($backdrop_borders_color, $backdrop_bg_color, 35%);

// derived hover colors - Yaru: we want the hover bg to be a visible gray for dark and light shell themes
$hover_bg_color: transparentize($fg_color, 0.9);
$hover_fg_color: $fg_color;
$hover_borders_color: lighten($borders_color, 5%);

// derived active colors - Yaru: we want the active bg to be a visible gray for dark and light shell themes
$active_bg_color: transparentize($fg_color, 0.8);
$active_fg_color: darken($fg_color, if($variant=='light', 5%, 3%));

// derived checked colors
$checked_bg_color: if($variant=='light', darken($bg_color, 7%), lighten($bg_color, 9%));
$checked_fg_color: if($variant=='light', darken($fg_color, 7%), lighten($fg_color, 9%));

$base_hover_color: transparentize(white, 0.8);
$base_active_color: transparentize(white, 0.75);
// $hover_fg_color: lighten($selected_fg_color, .25);
// $active_fg_color: transparentize($selected_fg_color, .5);

//special cased widget colors
$suggested_bg_color: if($variant=='light', lighten($green, 5%), darken($green, 5%));
$suggested_border_color: if($variant=='light', darken($suggested_bg_color, 5%), darken($suggested_bg_color, 10%));
$focus_border_color: lighten($accent_bg_color, 14%);
